@author: Silvan Egli, SImon Peyer


Convention for the Json Objects we send by using the Client_Interface 

action_ID : INTEGER
	1 = register_message
	2 = query_message
	3 = unregister_message
	4 = keep_alive_message
	5 = application_message
	6 = registered_users_message
	7 = hole_punch_message

action_ID: JSON_NUMBER
data : JSON_VALUE Can be anything depending on the action ID


{
	"type" : action_ID
	"data" : data
}

In more detail:

register_packet:
{
	"type" : 1
	"name" : "my_name" :JSON_STRING
}

query_packet
{
	"type" : 2
	"name" : "peer_name" :JSON_STRING
}

unregister_packer
{
	"type" : 3
	"name" : "my_name" :JSON_STRING
}

keep_alive_packet
{
	"type" : 4
}

application_packet
{
	"type" : 5
	"data" : "message" :JSON_STRING
}
The message is returned to the user

registered_users_message
{
	"type" : 6
}

hole_punch_message
{
	"type" : 7
}


The server sends back according packets but with an additional error (key/value) pair

register_packet:
{
	"type" : 1
	"error": JSON_NUMBER
}

query_packet
{
	"type" : 2
	"error": JSON_NUMBER
	"ip"   : "188.251.2.41" :JSON_STRING
	"port" : JSON_NUMBER
}

unregister_packer
{
	"type" : 3
	"error": JSON_NUMBER
}


registered_users_message
{
	"type" : 6
	"error": JSON_NUMBER
	"users": "Silvan, Simon, Bob" :JSON_ARRAY
}
